{
    "AWSTemplateFormatVersion": "2010-09-09",
    "Description": "Datastax template, License: Apache 2.0 (Please do not remove) May,30,2017 (qs-1nbqhl4uf)",
    "Parameters": {
        "KeyName": {
            "Description": "Name of an existing EC2 KeyPair to enable SSH access to the instance",
            "Type": "AWS::EC2::KeyPair::KeyName",
            "ConstraintDescription": "must be the name of an existing EC2 KeyPair."
        },
        "DDACSecurityGroupId": {
            "Type": "AWS::EC2::SecurityGroup::Id",
            "Description": "DDAC security group id"
        },
        "SubnetId": {
            "Type": "AWS::EC2::Subnet::Id",
            "Description": "SubnetId in existing VPC`"
        },
        "Profile": {
            "Description": "InstanceProfile for DDAC instance",
            "Type": "String"
        },
        "S3Bucket": {
            "Description": "S3Bucket for public key passing - seeds",
            "Default": "scotth-test",
            "Type": "String"
        },
        "InstanceType": {
            "Description": "Node EC2 instance type",
            "Type": "String",
            "Default": "m4.2xlarge",
            "AllowedValues": [
                "m4.2xlarge",
                "m4.4xlarge"
            ],
            "ConstraintDescription": "must be a valid EC2 instance type."
        }
    },
    "Mappings": {
        "AWSAMIRegionMap": {
            "AMI": {
                "US1604HVM": "ubuntu/images/hvm-ssd/ubuntu-xenial-16.04-amd64-server-20181012"
            },
            "us-east-1": {
                "US1604HVM": "ami-02fcb77bea0e7dc6d"
            },
            "us-west-2": {
                "US1604HVM": "ami-016ee641d8bb1b9fd"
            }
        }
    },
    "Resources": {
        "DDACEIP": {
            "Type": "AWS::EC2::EIP",
            "Properties": {
                "Domain": "vpc"
            }
        },
        "IPAssoc": {
            "Type": "AWS::EC2::EIPAssociation",
            "Properties": {
                "InstanceId": {
                    "Ref": "DDACInstance"
                },
                "AllocationId": {
                    "Fn::GetAtt": [
                        "DDACEIP",
                        "AllocationId"
                    ]
                }
            }
        },
        "DDACInstance": {
            "Type": "AWS::EC2::Instance",
            "Metadata": {
                "AWS::CloudFormation::Init": {
                    "configSets": {
                        "full_install": [
                            "install_cfn",
                            "install_ddac",
                            "post_install"
                        ]
                    },
                    "install_cfn": {
                        "files": {
                            "/etc/cfn/cfn-hup.conf": {
                                "content": {
                                    "Fn::Join": [
                                        "",
                                        [
                                            "[main]\n",
                                            "stack=",
                                            {
                                                "Ref": "AWS::StackId"
                                            },
                                            "\n",
                                            "region=",
                                            {
                                                "Ref": "AWS::Region"
                                            },
                                            "\n"
                                        ]
                                    ]
                                },
                                "mode": "000400",
                                "owner": "root",
                                "group": "root"
                            },
                            "/etc/cfn/hooks.d/cfn-auto-reloader.conf": {
                                "content": {
                                    "Fn::Join": [
                                        "",
                                        [
                                            "[cfn-auto-reloader-hook]\n",
                                            "triggers=post.update\n",
                                            "path=Resources.DDACInstance.Metadata.AWS::CloudFormation::Init\n",
                                            "action=/usr/local/bin/cfn-init -v ",
                                            "         --stack ",
                                            {
                                                "Ref": "AWS::StackName"
                                            },
                                            "         --resource DDACInstance ",
                                            "         --configsets full_install ",
                                            "         --region ",
                                            {
                                                "Ref": "AWS::Region"
                                            },
                                            "\n",
                                            "runas=root\n"
                                        ]
                                    ]
                                }
                            }
                        },
                        "services": {
                            "sysvinit": {
                                "cfn-hup": {
                                    "enabled": "true",
                                    "ensureRunning": "true",
                                    "files": [
                                        "/etc/cfn/cfn-hup.conf",
                                        "/etc/cfn/hooks.d/cfn-auto-reloader.conf"
                                    ]
                                }
                            }
                        }
                    },
                    "install_ddac": {
                        "commands": {
                            "01_install_ddac": {
                                "command": {
                                    "Fn::Join": [
                                        "",
                                        [
                                            "#!/usr/bin/env bash -e \n",
                                            "cloud_type=\"aws\" \n",
                                            "cd ~ubuntu \n",
                                            "cd scripts \n",
                                            "./deploy-dse.sh \n",
                                            "' \n"
                                        ]
                                    ]
                                }
                            }
                        }
                    },
                    "gen_ssh_key": {
                        "commands": {
                            "01_gen_ssh_key": {
                                "command": {
                                    "Fn::Join": [
                                        "",
                                        [
                                            "#!/usr/bin/env bash -e \n",
                                            "apt-get -y install awscli \n",
                                            "cd ~ubuntu/.ssh/ \n",
                                            "ssh-keygen -t rsa -N '' -f lcm.pem \n",
                                            "chown ubuntu:ubuntu lcm.pem* \n",
                                            "echo 'Generated lcm.pem and lcm.pem.pub' \n",
                                            "aws s3 cp lcm.pem.pub s3://",
                                            {
                                                "Ref": "S3Bucket"
                                            },
                                            " --region ",
                                            {
                                                "Ref": "AWS::Region"
                                            },
                                            " \n"
                                        ]
                                    ]
                                }
                            }
                        }
                    }
                }
            },
            "Properties": {
                "ImageId": {
                    "Fn::FindInMap": [
                        "AWSAMIRegionMap",
                        {
                            "Ref": "AWS::Region"
                        },
                        "US1604HVM"
                    ]
                },
                "InstanceType": {
                    "Ref": "InstanceType"
                },
                "IamInstanceProfile": {
                    "Ref": "Profile"
                },
                "SecurityGroupIds": [
                    {
                        "Ref": "DDACSecurityGroupId"
                    }
                ],
                "SubnetId": {
                    "Ref": "SubnetId"
                },
                "KeyName": {
                    "Ref": "KeyName"
                },
                "UserData": {
                    "Fn::Base64": {
                        "Fn::Join": [
                            "",
                            [
                                "#!/bin/bash -xe\n",
                                "apt-get update\n",
                                "pip install https://s3.amazonaws.com/cloudformation-examples/aws-cfn-bootstrap-latest.tar.gz && break \n",
                                "echo \"pip install cfn-bootstrap try $n failed, retry...\" \n",
                                "n=$[$n+1] \n",
                                "done \n",
                                "ln -s /usr/local/init/ubuntu/cfn-hup /etc/init.d/cfn-hup \n",
                                "chmod 775 /usr/local/init/ubuntu/cfn-hup \n",
                                "update-rc.d cfn-hup defaults \n",
                                "/usr/local/bin/cfn-init -v ",
                                "         --stack ",
                                {
                                    "Ref": "AWS::StackId"
                                },
                                "         --resource DDACInstance ",
                                "         --configsets full_install ",
                                "         --region ",
                                {
                                    "Ref": "AWS::Region"
                                },
                                "\n"
                            ]
                        ]
                    }
                }
            }
          }
    },
    "Outputs": {
        "DDACURL": {
            "Value": {
                "Fn::Join": [
                    "",
                    [
                        "http://",
                        {
                            "Fn::GetAtt": [
                                "DDACInstance",
                                "PublicDnsName"
                            ]
                        },
                        ":8080/ddac"
                    ]
                ]
            },
            "Description": "URL for DDAC"
        },
        "DDACPublicIP": {
            "Value": {
                "Fn::GetAtt": [
                    "DDACInstance",
                    "PublicIp"
                ]
            },
            "Description": "Public IP for DDAC"
        },
        "DDACPrivateIP": {
            "Value": {
                "Fn::GetAtt": [
                    "DDACInstance",
                    "PrivateIp"
                ]
            },
            "Description": "Private IP for DDAC"
        }
    }
}
